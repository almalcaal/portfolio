:root {
  --color-accent: #5eead4;
  --color-highlight: #e2e8f0;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
  font-family: "Inter", sans-serif;
}

body {
  background-color: #0f172a;
  color: #94a3b8;
  padding: 4rem 2rem;
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 6rem;
  /* might be DELETE-ABLE */
  min-height: 100vh;
}

p {
  line-height: 1.5rem;
}

/* ::selection is just left-mouse click and highlight */
p::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
h6::selection {
  background-color: var(--color-accent);
  color: #0f172a;
}

.underlay {
  position: fixed;
  /* doing this with background and opacity allows us to "blend" the original color with our underlay's color */
  background-color: #172554;
  opacity: 0.15;
  top: 50%;
  /* stretches everything across the page */
  inset: 0;
}

header,
main,
footer {
  position: relative;
  /* will push our text ahead of our underlay */
  z-index: 10;
}

header {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  /* consider making the max-width 230px to fit my actual name */
  max-width: 300px;
}

header h1,
header h3,
.lightText {
  color: var(--color-highlight);
}

header a {
  text-decoration: none;
}

header h1 {
  font-weight: 600;
}

header h3 {
  font-weight: 400;
}

main {
  display: flex;
  flex-direction: column;
  gap: 6rem;
}

section {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

section h2,
.experience-card h3 {
  text-transform: uppercase;
  font-size: 1rem;
  font-weight: 500;
}

.sticky-header {
  position: sticky;
  top: 0;
  padding: 1rem 0;
}

.sticky-header h2 {
  position: relative;
  z-index: 2;
}

.sticky-header::before {
  content: "";
  position: absolute;
  inset: 0;
  background: #101a31;
  opacity: 0.88;
}

.about-contents {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.about-contents p {
  font-size: 1.1rem;
}

.anchor-text {
  color: var(--color-highlight);
  text-decoration: none;
  transition-duration: 200ms;
}

.anchor-text:hover {
  color: var(--color-accent);
}

.experience-contents,
.project-contents {
  display: flex;
  flex-direction: column;
  gap: 4rem;
}

.experience-card,
.project-card {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.experience-card {
  gap: 0.5rem;
}

.project-card {
  gap: 1rem;
}

.card-column {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.tenure {
  opacity: 0.7;
  text-transform: uppercase;
  font-size: 0.8rem;
}

.experience-card p {
  font-size: 0.9rem;
}

.card-header {
  font-weight: 400;
  font-size: 1rem;
}

.tag-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  color: var(--color-accent);
}

.tag {
  border-radius: 0.9rem;
  padding: 0.25rem 0.5rem;
  background-color: rgba(45, 212, 191, 0.1);
}

.tag p {
  font-size: 0.8rem;
}

.project-image-container {
  max-width: 200px;
  overflow: hidden;
  display: grid;
  place-items: center;
  aspect-ratio: 16 / 9;
  /* order 2 makes our selected tag come in the 2nd order, so, in this case, if there were 3 siblings [1, 2, 3] becomes [2, 1, 3] */
  order: 2;
  border-radius: 0.5rem;
}

.project-image-container img {
  object-fit: cover;
  width: 100%;
  height: 100%;
}

.project-stat-link {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.8rem;
}

.project-archive-link {
  position: relative;
  color: var(--color-highlight);
  text-decoration: none;
  transition-duration: 200ms;
  /* needed so .project-archive-link::after will span only the necessary amount of space */
  margin-right: auto;
}

.project-archive-link span {
  transition-duration: 200ms;
}

.project-archive-link:hover span {
  padding-left: 0.25rem;
}

.project-archive-link::after {
  /* content is required, whether or not you actually have content to output or not */
  content: "";
  /* absolute requires a parent to attach to, in this case .project-archive-link */
  position: absolute;
  left: 0;
  width: 100%;
  height: 1.5px;
  bottom: 0;
  background: transparent;
  transition-duration: 200ms;
}

.project-archive-link:hover::after {
  background: var(--color-accent);
}
